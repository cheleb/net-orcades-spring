#summary Maven project installation process.
#labels Featured

= Introduction =

These projects are maven project. These is a (very) short, maven guide.
The jar can be used outside a maven project as long as your webapp provides the following dependencies:
  * spring-web-2.5.5
  * common-logging-1.1.1
  * spring-beans-2.5.5
  * spring-core-2.5.5
  * spring-context-2.5.5
  * aopalliance-1.0
  * log4j-1.4.9
  * gwt-servlet-1.5.2 (should work with 1.4.x)


= Details =

== Prerequisite ==
  * maven eclipse plugin: http://m2eclipse.codehaus.org/
  * cypal studio: http://code.google.com/p/cypal-studio/ (for webapp sample).
  ** WTP (!)

== Checkout project ==

{{{
svn checkout http://net-orcades-spring.googlecode.com/svn/trunk/ net-orcades-spring
}}}

{{{
cd net-orcades-spring
}}}

== build eclipse metadata (for each project) ==
{{{
$# cd orcades-spring-gwt
$# mvn eclipse:clean eclipse:m2eclipse
}}}

{{{
$# cd orcades-spring-gwt-sample
$# mvn eclipse:clean eclipse:m2eclipse
}}}
Now project are also eclipse project.

== Deploy artifact (optional) ==
{{{
$# cd orcades-spring-gwt
$# mvn clean install
}}}


== Open project within eclipse ==

Now you can import those 2 projects with Import >> General >> Existing project into workspace.

*be aware* of m2eclipse behaviour with "workspace resolution" with WTP project

For the orcades-spring-gwt-sample project only

If the orcades-sprint-gwt project is open in your workspace and "workspace resolution" enabled (default), then you must add orcades-spring-gwt project to project classpath dependencies of the orcades-spring-gwt-sample (webapp) project.

Also, the Project >> Properties >> Java EE Module dependencies must be correct:
  * orcades-spring-gwt checked
  * maven dependencies checked 



Have fun...